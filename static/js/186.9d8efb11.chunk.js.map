{"version":3,"file":"static/js/186.9d8efb11.chunk.js","mappings":"8LAqCA,UAhCA,WACA,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeN,GAASO,MAAK,SAAAC,GACzBJ,EAAWI,EAASC,KAAKC,QAC5B,GACJ,GAAC,CAACV,KAGC,8BACCG,GAAWA,EAAQQ,OAAS,GACzB,wBACGR,EAAQS,KAAI,SAACC,EAAQC,GAAT,OACX,yBACE,4BACE,uBAAID,EAAOE,UACX,uBAAIF,EAAOG,cAHNF,EADE,OAUf,0BAAK,wEAMZ,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import {useEffect, useState } from 'react';\nimport { useParams} from 'react-router-dom';\nimport {getMovieReview} from '../../API/Api';\n\n\nfunction Reviews (){\nconst { movieId } = useParams();\nconst [reviews, setReviews] = useState([]);\n\nuseEffect(() => {\n    getMovieReview(movieId).then(response => {\n        setReviews(response.data.results);\n    })\n},[movieId])\n\nreturn (\n    <>\n    {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map((review, index) => (\n            <li key={index}>\n              <div>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div><p>We don't have any reviews for this movie.</p></div>\n      )}   \n    </>\n\n)\n\n}\n\nexport default Reviews; "],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReview","then","response","data","results","length","map","review","index","author","content"],"sourceRoot":""}