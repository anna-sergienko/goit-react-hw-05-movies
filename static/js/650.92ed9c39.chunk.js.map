{"version":3,"file":"static/js/650.92ed9c39.chunk.js","mappings":"mOAqCA,MAjCA,YAAgC,IAAXA,EAAU,EAAVA,SACrB,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAcA,OACG,+BACD,kBAAMH,SARe,SAAAI,GAGrB,OAFAA,EAAIC,iBACJD,EAAIE,OAAOC,QACJP,EAASE,EACf,EAID,WACA,kBACIM,KAAK,OACLC,aAAa,MACbC,SAjBmB,SAAAN,GACrBD,EAAiBC,EAAIE,OAAOK,MAAMC,cAAcC,OACjD,EAgBGC,WAAS,EACTC,YAAY,sBAEd,mBAAQP,KAAK,SAAb,8BAMH,E,SCAC,MA7BF,WACE,OAAwCQ,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCjB,EAAAA,EAAAA,UAAS,IAA/C,eAAOkB,EAAP,KAAoBC,EAApB,KACMC,EAAQJ,EAAaK,IAAI,SAkB7B,OAhBJC,EAAAA,EAAAA,YAAU,WACM,KAAVF,GAAiBA,IAErBG,EAAAA,EAAAA,IAAYH,GAAOI,MACjB,SAAAC,GACEN,EAAeM,EAASC,KAAKC,QAC9B,GACJ,GAAC,CAACP,KAUG,6BACC,SAAC,EAAD,CAAWrB,SARG,SAAA2B,GACnB,OAAOT,EAAgB,CAAEG,MAAOM,GACjC,IAOOR,IAAe,SAACU,EAAA,EAAD,CAAcF,KAAMR,MAGxC,C","sources":["components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n\nfunction Searchbar ({onSubmit}){\nconst [searchingName, setSearchingName] = useState('');\n\n\nconst handleNameChange = evt =>{\n    setSearchingName(evt.target.value.toLowerCase().trim());\n  }\n  \n  \n  const handleSubmit = evt =>{\n  evt.preventDefault();\n  evt.target.reset();\n  return onSubmit(searchingName);\n  };\n\nreturn(\n   <>\n  <form onSubmit={handleSubmit}>\n  <input\n      type=\"text\"\n      autoComplete=\"off\"\n      onChange={handleNameChange}\n      autoFocus\n      placeholder=\"Enter movie name\"\n    />\n    <button type=\"submit\" >\n     Search movie\n    </button>\n  </form>\n</>\n)\n}\n\nexport default Searchbar;\n\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n","import { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport TrendingList from \"../../components/TrendingList/TrendingList\";\nimport Searchbar from \"../../components/Searchbar/Searchbar\";\nimport {searchMovie} from '../../API/Api';\n\nfunction Movies () {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState([]);\n  const query = searchParams.get(\"query\");\n\nuseEffect(()=>{\n  if (query === \"\" || !query) return;\n\n  searchMovie(query).then(\n    response => {\n      setSearchQuery(response.data.results);\n    })\n},[query]);\n\n\nconst handleSubmit = data => {\n  return setSearchParams({ query: data});\n};\n\n\n\n    return (\n      <main>\n       <Searchbar onSubmit={handleSubmit}/>\n       {searchQuery && <TrendingList data={searchQuery}/>}\n      </main>\n    );\n  };\n\n  export default Movies;"],"names":["onSubmit","useState","searchingName","setSearchingName","evt","preventDefault","target","reset","type","autoComplete","onChange","value","toLowerCase","trim","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","searchQuery","setSearchQuery","query","get","useEffect","searchMovie","then","response","data","results","TrendingList"],"sourceRoot":""}